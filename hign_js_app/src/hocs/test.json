{
    "ReRoutes": [
        {
            "DownstreamPathTemplate": "/{url}", //下游地址万能模板
            "DownstreamScheme": "http",
            //下游地址以及端口号
            //配置多个是为了实现负载均衡功能
            //注：最好使用IP 而不是localhost
            "DownstreamHostAndPorts": [
              {
                "Host": "127.0.0.1",
                "Port": 5005
              }
            ],
            "UpstreamPathTemplate": "/LogApi/{url}", //上游地址万能模板
            "UpstreamHttpMethod": [ "Get", "POST" ], //转发的请求类型
            "LoadBalancer": "LeastConnection", //负载均衡模式
            //服务名称 需要和consul中配置的服务名称一致
            "ServiceName": "LogApi",
            "UseServiceDiscovery": true, //是否启用服务发现
            //身份验证 所需属性 不验证可去除
            "AuthenticationOptions": {
              //"AuthenticationProviderKey": "aaa", //自定义key
              //"AllowScopes": [ "OpenApi" ] //服务名称
            }
          },
      {
        "DownstreamPathTemplate": "/{url}", //下游地址万能模板
        "DownstreamScheme": "http",
        //下游地址以及端口号
        //配置多个是为了实现负载均衡功能
        //注：最好使用IP 而不是localhost
        "DownstreamHostAndPorts": [
          {
            "Host": "127.0.0.1",
            "Port": 5006
          }
        ],
        "UpstreamPathTemplate": "/OpenApi/{url}", //上游地址万能模板
        "UpstreamHttpMethod": [ "Get", "POST" ], //转发的请求类型
        "LoadBalancer": "LeastConnection", //负载均衡模式
        //服务名称 需要和consul中配置的服务名称一致
        "ServiceName": "OpenApi",
        "UseServiceDiscovery": true, //是否启用服务发现
        //身份验证 所需属性 不验证可去除
        "AuthenticationOptions": {
          //"AuthenticationProviderKey": "aaa", //自定义key
          //"AllowScopes": [ "OpenApi" ] //服务名称
        }
      },
      {
        "DownstreamPathTemplate": "/{url}", //下游地址万能模板
        "DownstreamScheme": "http",
        //下游地址以及端口号
        //配置多个是为了实现负载均衡功能
        //注：最好使用IP 而不是localhost
        "DownstreamHostAndPorts": [
          {
            "Host": "127.0.0.1",
            "Port": 5001
          }
        ],
        "UpstreamPathTemplate": "/FormEngine/{url}", //上游地址万能模板
        "UpstreamHttpMethod": [ "Get", "POST" ], //转发的请求类型
        "LoadBalancer": "LeastConnection", //负载均衡模式
        //服务名称 需要和consul中配置的服务名称一致
        "ServiceName": "FormEngine",
        "UseServiceDiscovery": true, //是否启用服务发现
        //身份验证 所需属性 不验证可去除
        "AuthenticationOptions": {
          //"AuthenticationProviderKey": "aaa", //自定义key
          //"AllowScopes": [ "OpenApi" ] //服务名称
        }
      },
      {
        "DownstreamPathTemplate": "/{url}", //下游地址万能模板
        "DownstreamScheme": "http",
        //下游地址以及端口号
        //配置多个是为了实现负载均衡功能
        //注：最好使用IP 而不是localhost
        "DownstreamHostAndPorts": [
          {
            "Host": "127.0.0.1",
            "Port": 5004
          }
        ],
        "UpstreamPathTemplate": "/InvoiceAssistant/{url}", //上游地址万能模板
        "UpstreamHttpMethod": [ "Get", "POST" ], //转发的请求类型
        "LoadBalancer": "LeastConnection", //负载均衡模式
        //服务名称 需要和consul中配置的服务名称一致
        "ServiceName": "InvoiceAssistant",
        "UseServiceDiscovery": true, //是否启用服务发现
        //身份验证 所需属性 不验证可去除
        "AuthenticationOptions": {
          //"AuthenticationProviderKey": "aaa", //自定义key
          //"AllowScopes": [ "OpenApi" ] //服务名称
        }
      },
      {
        "DownstreamPathTemplate": "/{url}", //下游地址万能模板
        "DownstreamScheme": "http",
        //下游地址以及端口号
        //配置多个是为了实现负载均衡功能
        //注：最好使用IP 而不是localhost
        "DownstreamHostAndPorts": [
          {
            "Host": "localhost",
            "Port": 8080
          }
        ],
        "UpstreamPathTemplate": "/App/{url}", //上游地址万能模板
        "UpstreamHttpMethod": [ "Get", "POST" ], //转发的请求类型
        "LoadBalancer": "LeastConnection", //负载均衡模式
        //服务名称 需要和consul中配置的服务名称一致
        "ServiceName": "App",
        "UseServiceDiscovery": false, //是否启用服务发现
        //身份验证 所需属性 不验证可去除
        "AuthenticationOptions": {
          //"AuthenticationProviderKey": "aaa", //自定义key
          //"AllowScopes": [ "OpenApi" ] //服务名称
        }
      },
      {
        "DownstreamPathTemplate": "/connect/token",
        "DownstreamScheme": "http",
        "DownstreamHostAndPorts": [
          {
            "Host": "127.0.0.1",
            "Port": 5100
          }
        ],
        "UpstreamPathTemplate": "/connect/token",
        "UpstreamHttpMethod": [ "Get", "POST" ],
        "LoadBalancer": "LeastConnection",
        "ServiceName": "IdentityService",
        "UseServiceDiscovery": true,
        "AuthenticationOptions": {
        }
      }
    ],
  
    "GlobalConfiguration": {
      //"BaseUrl": "http://127.0.0.1:8086", //对外地址
      //服务发现地址配置
      "ServiceDiscoveryProvider": {
        "Host": "127.0.0.1",
        "Port": 8500
      }
    }
  }