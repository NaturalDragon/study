[{"F:\\lzn\\study\\tslearn\\src\\index.tsx":"1","F:\\lzn\\study\\tslearn\\src\\reportWebVitals.ts":"2","F:\\lzn\\study\\tslearn\\src\\App.tsx":"3","F:\\lzn\\study\\tslearn\\src\\imp\\interfaceImp\\index.ts":"4","F:\\lzn\\study\\tslearn\\src\\imp\\lyric\\index.ts":"5","F:\\lzn\\study\\tslearn\\src\\imp\\classImp\\index.ts":"6","F:\\lzn\\study\\tslearn\\src\\imp\\funcImp\\index.ts":"7","F:\\lzn\\study\\tslearn\\src\\imp\\genericImp\\index.ts":"8","F:\\lzn\\study\\tslearn\\src\\imp\\typecompatibilityImp\\index.ts":"9","F:\\lzn\\study\\tslearn\\src\\imp\\advancedTypeImp\\index.ts":"10","F:\\lzn\\study\\tslearn\\src\\imp\\typeVSinterface\\index.ts":"11","F:\\lzn\\study\\tslearn\\src\\imp\\moduleImp\\index.ts":"12","F:\\lzn\\study\\tslearn\\src\\imp\\interfaceImp\\interfaceImp.tsx":"13","F:\\lzn\\study\\tslearn\\src\\imp\\lyric\\lyricCom.tsx":"14","F:\\lzn\\study\\tslearn\\src\\imp\\classImp\\classImp.tsx":"15","F:\\lzn\\study\\tslearn\\src\\imp\\genericImp\\genericImp.tsx":"16","F:\\lzn\\study\\tslearn\\src\\imp\\funcImp\\funcImp.tsx":"17","F:\\lzn\\study\\tslearn\\src\\imp\\lyric\\util.ts":"18","F:\\lzn\\study\\tslearn\\src\\imp\\typecompatibilityImp\\typecompatibilityImp.tsx":"19","F:\\lzn\\study\\tslearn\\src\\imp\\typeVSinterface\\typeVSinterface.tsx":"20","F:\\lzn\\study\\tslearn\\src\\imp\\moduleImp\\moduleImp.tsx":"21","F:\\lzn\\study\\tslearn\\src\\imp\\advancedTypeImp\\advancedTypeImp.tsx":"22"},{"size":523,"mtime":1606915962441,"results":"23","hashOfConfig":"24"},{"size":440,"mtime":1606915962442,"results":"25","hashOfConfig":"24"},{"size":3437,"mtime":1610755090743,"results":"26","hashOfConfig":"24"},{"size":76,"mtime":1607133443238,"results":"27","hashOfConfig":"24"},{"size":58,"mtime":1607133443239,"results":"28","hashOfConfig":"24"},{"size":62,"mtime":1607133443237,"results":"29","hashOfConfig":"24"},{"size":57,"mtime":1607133665294,"results":"30","hashOfConfig":"24"},{"size":66,"mtime":1607172310761,"results":"31","hashOfConfig":"24"},{"size":96,"mtime":1610755090746,"results":"32","hashOfConfig":"24"},{"size":81,"mtime":1610755090743,"results":"33","hashOfConfig":"24"},{"size":82,"mtime":1610755090745,"results":"34","hashOfConfig":"24"},{"size":63,"mtime":1610755090745,"results":"35","hashOfConfig":"24"},{"size":1185,"mtime":1607133443238,"results":"36","hashOfConfig":"24"},{"size":3380,"mtime":1610760365027,"results":"37","hashOfConfig":"24"},{"size":1366,"mtime":1607133652638,"results":"38","hashOfConfig":"24"},{"size":1510,"mtime":1607175872603,"results":"39","hashOfConfig":"24"},{"size":1198,"mtime":1610755090744,"results":"40","hashOfConfig":"24"},{"size":4920,"mtime":1610755090744,"results":"41","hashOfConfig":"24"},{"size":377,"mtime":1610755090746,"results":"42","hashOfConfig":"24"},{"size":831,"mtime":1610755090746,"results":"43","hashOfConfig":"24"},{"size":93,"mtime":1610755090745,"results":"44","hashOfConfig":"24"},{"size":4147,"mtime":1610755090743,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"15gus0t",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"48"},"F:\\lzn\\study\\tslearn\\src\\index.tsx",[],[],"F:\\lzn\\study\\tslearn\\src\\reportWebVitals.ts",["102"],"import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","F:\\lzn\\study\\tslearn\\src\\App.tsx",["103","104"],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { HashRouter, NavLink, Switch, Route, Redirect } from 'react-router-dom';\r\nimport InterfaceImp from './imp/interfaceImp/index';\r\nimport Lyric from './imp/lyric/index';\r\nimport ClassImp from './imp/classImp';\r\nimport FuncImp from './imp/funcImp';\r\nimport GenericImp from './imp/genericImp';\r\nimport TypecompatibilityImp from './imp/typecompatibilityImp';\r\nimport AdvancedTypeImp from './imp/advancedTypeImp';\r\nimport ModuleImp from './imp/moduleImp';\r\nimport TypeVSinterface from './imp/typeVSinterface';\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"main\">\r\n        <div className=\"tab\">\r\n          <NavLink to=\"/interfaceImp\" activeClassName=\"selected\">\r\n            <div className=\"tabItem\">\r\n              <span>interfaceImp</span>\r\n            </div>\r\n          </NavLink>\r\n          <NavLink to=\"/lyric\" activeClassName=\"selected\">\r\n            {' '}\r\n            <div className=\"tabItem\">\r\n              <span>lyric</span>\r\n            </div>\r\n          </NavLink>\r\n          <NavLink to=\"/classImp\" activeClassName=\"selected\">\r\n            {' '}\r\n            <div className=\"tabItem\">\r\n              <span>ClassImp</span>\r\n            </div>\r\n          </NavLink>\r\n          <NavLink to=\"/funcImp\" activeClassName=\"selected\">\r\n            {' '}\r\n            <div className=\"tabItem\">\r\n              <span>funcImp</span>\r\n            </div>\r\n          </NavLink>\r\n          <NavLink to=\"/genericImp\" activeClassName=\"selected\">\r\n            {' '}\r\n            <div className=\"tabItem\">\r\n              <span>genericImp</span>\r\n            </div>\r\n          </NavLink>\r\n          <NavLink to=\"/typecompatibilityImp\" activeClassName=\"selected\">\r\n            {' '}\r\n            <div className=\"tabItem\">\r\n              <span>typecompatibilityImp</span>\r\n            </div>\r\n          </NavLink>\r\n          <NavLink to=\"/advancedTypeImp\" activeClassName=\"selected\">\r\n            {' '}\r\n            <div className=\"tabItem\">\r\n              <span>advancedTypeImp</span>\r\n            </div>\r\n          </NavLink>\r\n          <NavLink to=\"/moduleImp\" activeClassName=\"selected\">\r\n            {' '}\r\n            <div className=\"tabItem\">\r\n              <span>moduleImp</span>\r\n            </div>\r\n          </NavLink>\r\n          <NavLink to=\"/typeVSinterface\" activeClassName=\"selected\">\r\n            {' '}\r\n            <div className=\"tabItem\">\r\n              <span>typeVSinterface</span>\r\n            </div>\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route path=\"/interfaceImp\" exact component={InterfaceImp} />\r\n\r\n            <Route path=\"/lyric\" exact component={Lyric} />\r\n            <Route path=\"/classImp\" exact component={ClassImp} />\r\n\r\n            <Route path=\"/funcImp\" exact component={FuncImp} />\r\n            <Route path=\"/genericImp\" exact component={GenericImp} />\r\n            <Route path=\"/typecompatibilityImp\" exact component={TypecompatibilityImp} />\r\n            <Route path=\"/advancedTypeImp\" exact component={AdvancedTypeImp} />\r\n\r\n            <Route path=\"/moduleImp\" exact component={ModuleImp} />\r\n\r\n            <Route path=\"/typeVSinterface\" exact component={TypeVSinterface} />\r\n            <Redirect to=\"/interfaceImp\"></Redirect>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\lzn\\study\\tslearn\\src\\imp\\interfaceImp\\index.ts",[],"F:\\lzn\\study\\tslearn\\src\\imp\\lyric\\index.ts",[],"F:\\lzn\\study\\tslearn\\src\\imp\\classImp\\index.ts",[],"F:\\lzn\\study\\tslearn\\src\\imp\\funcImp\\index.ts",[],"F:\\lzn\\study\\tslearn\\src\\imp\\genericImp\\index.ts",[],"F:\\lzn\\study\\tslearn\\src\\imp\\typecompatibilityImp\\index.ts",[],"F:\\lzn\\study\\tslearn\\src\\imp\\advancedTypeImp\\index.ts",[],"F:\\lzn\\study\\tslearn\\src\\imp\\typeVSinterface\\index.ts",[],"F:\\lzn\\study\\tslearn\\src\\imp\\moduleImp\\index.ts",[],"F:\\lzn\\study\\tslearn\\src\\imp\\interfaceImp\\interfaceImp.tsx",["105","106","107","108","109"],"import * as React from 'react';\r\n\r\ninterface Point {\r\n  readonly x: number;\r\n  readonly y: number;\r\n}\r\nconst p1: Point = { x: 1, y: 2 };\r\n//p1.x = 2;\r\nconsole.log(p1.x);\r\nconst p2 = { x: 2, y: 9 } as Point;\r\np2.x;\r\n\r\ninterface SearchFunc {\r\n  (source: string, substring: string): boolean;\r\n}\r\nconst mySearch: SearchFunc = function (src, sub) {\r\n  const result = src.search(sub);\r\n  return result > -1;\r\n};\r\nmySearch('1', '2');\r\n\r\ninterface StringArray {\r\n  readonly [index: number]: string;\r\n}\r\nconst myArray: StringArray = ['lizn', 'cy', 'liyf'];\r\n//myArray[0] = 'l';\r\nconsole.log(`myArray:${myArray[0]}`);\r\ninterface StringArray1 {\r\n  [index: string]: string;\r\n}\r\n\r\ninterface IClockConstructor {\r\n  new (hour: number, minute: number): IClock;\r\n}\r\ninterface IClock {\r\n  currentTime?: Date;\r\n  setTime(d: Date): void;\r\n}\r\nconst Clock: IClockConstructor = class Clock implements IClock {\r\n  currentTime: Date;\r\n  setTime(d: Date): void {\r\n    this.currentTime = d;\r\n  }\r\n  constructor(hour: number, min: number) {\r\n    this.currentTime = new Date();\r\n  }\r\n};\r\nconst cc = new Clock(1, 2);\r\ncc.setTime(new Date());\r\n\r\nexport default function Index() {\r\n  return <div>interface</div>;\r\n}\r\n","F:\\lzn\\study\\tslearn\\src\\imp\\lyric\\lyricCom.tsx",["110","111","112","113","114","115","116","117","118"],"F:\\lzn\\study\\tslearn\\src\\imp\\classImp\\classImp.tsx",["119","120","121"],"import * as React from 'react';\n\nclass Octopus {\n  readonly name: string;\n  readonly count: number = 9;\n  constructor(theName: string) {\n    this.name = theName;\n  }\n}\n\nconst oct = new Octopus('lizn');\n//oct.name = 'zhuzhu';\n\nclass Octopus2 {\n  constructor(readonly name: string) {}\n}\nconst oct2 = new Octopus2('ddd');\nconsole.log(oct2.name);\n\nconst fullNameMaxLength = 10;\nclass Employee {\n  static age = 1000;\n  static sayHi(): void {\n    console.log('hi');\n  }\n  private _fullName = '';\n  get fullName() {\n    return this._fullName;\n  }\n  set fullName(newName: string) {\n    if (newName && newName.length > fullNameMaxLength) {\n      throw new Error('fullName has a max length of ' + fullNameMaxLength);\n    }\n    this._fullName = newName;\n  }\n}\n\nconst em = new Employee();\nem.fullName = 'wo';\nconsole.log(em.fullName);\nconsole.log(Employee.age);\nEmployee.sayHi();\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nabstract class Animal {\n  abstract makeSound(): void;\n  move(): void {\n    console.log('earch');\n  }\n}\nclass Cat extends Animal {\n  makeSound(): void {\n    console.log('ext');\n  }\n  generateReports(): void {\n    console.log('Generating accounting reports...');\n  }\n}\nlet c: Animal;\nc = new Cat();\n\nconst cat = new Cat();\ncat.generateReports();\nfunction Index() {\n  return <div>interface</div>;\n}\n\nexport default Index;\n","F:\\lzn\\study\\tslearn\\src\\imp\\genericImp\\genericImp.tsx",["122","123","124","125","126","127","128","129"],"import * as React from 'react';\n\nfunction identity<T>(arg: T): T {\n  return arg;\n}\nidentity<number>(9);\n\ninterface IIdentityFn {\n  <T>(arg: T): T;\n}\nlet myIdentity: IIdentityFn = function <T>(arg: T): T {\n  return arg;\n};\n\ninterface IIdentityFn2<T> {\n  (arg: T): T;\n}\nlet myIdentity2: IIdentityFn2<number> = function (arg: number): number {\n  return arg;\n};\n\nclass GenericNumber<T> {\n  zeroValue: T;\n  // static x: T;\n  constructor(a: T) {\n    this.zeroValue = a;\n  }\n}\nconst gen = new GenericNumber<number>(10);\n\ninterface Lengthwise {\n  length: number;\n}\nfunction loggingIdentity<T extends Lengthwise>(arg: T): T {\n  console.log(arg.length);\n  return arg;\n}\n//loggingIdentity<number>(10);\nloggingIdentity<string>('1213');\nloggingIdentity({ length: 10, a: '00' });\n\nfunction getProperty<T, K extends keyof T>(obj: T, key: K) {\n  return obj[key];\n}\nconst x = { a: 1, b: 2, c: 3, d: 4 };\ngetProperty(x, 'a');\n\nfunction create<T>(c: { new (): T }): T {\n  return new c();\n}\n\nclass BeeKeeper {\n  hasMask = true;\n}\nclass ZooKeeper {\n  nametag = '';\n}\nclass Animal {\n  numLegs = 10;\n}\nclass Bee extends Animal {\n  keeper: BeeKeeper;\n  constructor(k: BeeKeeper) {\n    super();\n    this.keeper = k;\n  }\n}\nclass Lion extends Animal {\n  keeper: ZooKeeper;\n  constructor(k: ZooKeeper) {\n    super();\n    this.keeper = k;\n  }\n}\nfunction createIntance<A extends Animal>(c: new () => A): A {\n  return new c();\n}\n// createIntance(Lion).keeper.nametag;\n\nexport default function Index() {\n  return <div>genericImp.tsx</div>;\n}\n","F:\\lzn\\study\\tslearn\\src\\imp\\funcImp\\funcImp.tsx",["130","131","132","133","134","135","136","137","138","139","140","141","142"],"import * as React from 'react';\n\nlet myAdd: (a: number, b: number) => number = function (a: number, b: number): number {\n  return a + b;\n};\n\nlet myAdd1: (a: number, b: number) => number = function (a, b) {\n  return a + b;\n};\nfunction myAdd2(a: number, b: number): number {\n  return a + b;\n}\n\nfunction buildName(fitstname = 'ma', lastname: string): void {\n  console.log(1);\n}\nfunction buildName1(l: string, f?: string): void {\n  console.log(1);\n}\n\nfunction buildName2(first: string, ...restOfName: string[]): void {\n  console.log(1);\n}\nbuildName2('liz', '1', '2', '3');\n\ninterface Card {\n  suit: string;\n  card: number;\n}\ninterface Deck {\n  suits: string[];\n  cards: number[];\n  createCardPicker(this: Deck): () => Card;\n}\n\nlet deck: Deck = {\n  suits: ['hearts', 'spades', 'clubs', 'diamonds'],\n  cards: Array(52),\n  createCardPicker: function (this: Deck) {\n    return () => {\n      let pickedCard = Math.floor(Math.random() * 52);\n      let pickedSuit = Math.floor(pickedCard / 13);\n\n      return { suit: this.suits[pickedSuit], card: pickedCard % 13 };\n    };\n  },\n};\n\nlet cardPicker = deck.createCardPicker();\nlet p = cardPicker();\n\nexport default function Index() {\n  return <div>func</div>;\n}\n","F:\\lzn\\study\\tslearn\\src\\imp\\lyric\\util.ts",["143","144","145","146","147","148","149","150","151","152"],"/** @format */\n\nimport { type } from 'os';\nimport { title } from 'process';\n\n/** @format */\nconst timeExp = /\\[(\\d{2,}):(\\d{2})(?:\\.(\\d{2,3}))?]/g;\nconst STATE_PAUSE = 0;\nconst STATE_PLAYING = 1;\ninterface ILyricConstructor {\n  new (lrc: string, handler: IHandler, speed: number): ILyric;\n}\n\nexport interface IHandler {\n  (param: ILyricLine): void;\n}\nexport interface IVoidHandler {\n  (): void;\n}\nexport interface IPlayHandler {\n  (offset?: number, isSeek?: boolean): void;\n}\nexport interface ISeekHandler {\n  (offset: number): void;\n}\n\nexport interface ITogglePlayHandler {\n  (offset: number): void;\n}\nexport interface ILyricLine {\n  time: number;\n  txt: string;\n}\n\ninterface Tag {\n  title?: 'ti';\n  artist?: 'ar';\n  album?: 'al';\n  offset?: 'offset';\n  by?: 'by';\n}\ninterface ITagRegMap {\n  (propName: string): Tag;\n}\n//let tagRegMap: ITagRegMap;\nconst tagRegMap = {\n  title: 'ti',\n  artist: 'ar',\n  album: 'al',\n  offset: 'offset',\n  by: 'by',\n};\n\nexport interface ILyric {\n  lrc: string;\n  tags: ITagRegMap;\n  lines: Array<ILyricLine>;\n  handler: IHandler;\n  state: number;\n  curLineIndex: number;\n  startStamp: number;\n  _init: IVoidHandler;\n  play: IPlayHandler;\n  seek: ISeekHandler;\n  stop: IVoidHandler;\n  togglePlay: ITogglePlayHandler;\n  //speed: number\n  // offset: number\n  //  timer?: any\n}\n\nconst Lyric: ILyricConstructor = class Lyric implements ILyric {\n  lrc: string;\n  tags: ITagRegMap;\n  lines: Array<ILyricLine>;\n  handler: IHandler;\n  state: number;\n  curLineIndex: number;\n  startStamp: number;\n  private speed: number;\n  private offset: number;\n  private timer?: any;\n\n  constructor(lrc: string, handler: IHandler, speed = 1) {\n    this.lrc = lrc;\n    this.tags = {} as ITagRegMap;\n    this.lines = new Array<ILyricLine>(); // 这是解析后的数组，每一项包含对应的歌词和时间\n    this.handler = handler; // 回调函数\n    this.state = STATE_PAUSE; // 播放状态\n    this.curLineIndex = 0; // 当前播放歌词所在的行数\n    this.startStamp = 0; // 歌曲开始的时间戳\n    this.speed = speed;\n    this.offset = 0;\n    this._init();\n  }\n  _init() {\n    this._initTag();\n\n    this._initLines();\n  }\n  play(offset = 0, isSeek = false) {\n    if (!this.lines.length) {\n      return;\n    }\n    this.state = STATE_PLAYING;\n\n    this.curLineIndex = this._findcurLineIndex(offset);\n    //现在正处于第this.curLineIndex-1行\n    this._callHandler(this.curLineIndex - 1);\n    this.offset = offset;\n    this.startStamp = +new Date() - offset;\n\n    if (this.curLineIndex < this.lines.length) {\n      clearTimeout(this.timer);\n      this._playRest(isSeek);\n    }\n  }\n\n  togglePlay(offset: number) {\n    if (this.state === STATE_PLAYING) {\n      this.stop();\n      this.offset = offset;\n    } else {\n      this.state = STATE_PLAYING;\n      this.play(offset, true);\n    }\n  }\n\n  stop() {\n    this.state = STATE_PAUSE;\n    this.offset = 0;\n    clearTimeout(this.timer);\n  }\n\n  seek(offset: number) {\n    this.play(offset, true);\n  }\n  private _initTag() {\n    for (let tag in tagRegMap) {\n      const tStr = tagRegMap[tag];\n      const matches = this.lrc.match(new RegExp(`\\\\[${tStr}:([^\\\\]]*)]`, 'i'));\n      this.tags[tag] = matches && (matches[1] || '');\n    }\n  }\n\n  private _initLines() {\n    const lines = this.lrc.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      const result = timeExp.exec(line);\n      if (!result) continue;\n      const txt = line.replace(timeExp, '').trim();\n      if (txt) {\n        if (result[3].length === 3) {\n          result[3] = (Number(result[3]) / 10).toString();\n        }\n        this.lines.push({\n          time: Number(result[1]) * 60 * 1000 + Number(result[2]) * 1000 + (Number(result[3]) || 0) * 10,\n          txt,\n        });\n      }\n      this.lines.sort(function (a, b) {\n        return a.time - b.time;\n      });\n    }\n  }\n  private _findcurLineIndex(time: number) {\n    for (let i = 0; i < this.lines.length; i++) {\n      if (time <= this.lines[i].time) {\n        return i;\n      }\n    }\n    return this.lines.length - 1;\n  }\n\n  private _callHandler(i: number) {\n    if (i < 0) {\n      return;\n    }\n    this.handler({\n      txt: this.lines[i].txt,\n      time: i,\n    });\n  }\n\n  private _playRest(isSeek = false) {\n    const line = this.lines[this.curLineIndex];\n    let delay;\n    if (isSeek) {\n      delay = line.time - (+new Date() - this.startStamp);\n    } else {\n      //拿到上一行的歌词开始时间，算间隔\n      const preTime = this.lines[this.curLineIndex - 1] ? this.lines[this.curLineIndex - 1].time : 0;\n      delay = line.time - preTime;\n    }\n    this.timer = setTimeout(() => {\n      this._callHandler(this.curLineIndex++);\n      if (this.curLineIndex < this.lines.length && this.state === STATE_PLAYING) {\n        this._playRest();\n      }\n    }, delay / this.speed);\n  }\n\n  changeSpeed(speed: number) {\n    this.speed = speed;\n  }\n};\n\nexport default Lyric;\n","F:\\lzn\\study\\tslearn\\src\\imp\\typecompatibilityImp\\typecompatibilityImp.tsx",["153","154","155"],"import * as React from 'react';\n\ninterface Named {\n  name: string;\n}\nclass Person {\n  name: string;\n  constructor(theName: string) {\n    this.name = theName;\n  }\n}\nlet p: Named;\np = new Person('li');\n\nlet p1: Named;\np1 = { name: 'zz' };\n\n// let x = (a: number) => 0;\n// let y = (b: number, s: string) => 0;\n// y = x;\n\nexport default function Index() {\n  return <div>1</div>;\n}\n","F:\\lzn\\study\\tslearn\\src\\imp\\typeVSinterface\\typeVSinterface.tsx",["156","157","158","159","160","161","162","163"],"import * as React from 'react';\n\ninterface User {\n  name: string;\n  age: number;\n}\n\ninterface SetUser {\n  (name: string, age: number): void;\n}\n\ntype User1 = {\n  name: string;\n  age: number;\n};\ntype SetUser1 = (name: string, age: number) => void;\n\ninterface Name {\n  name: string;\n}\ninterface Person extends Name {\n  age: number;\n}\nconst per: Person = { name: '', age: 1 };\n\ntype Name1 = {\n  name: string;\n};\n\ntype Person1 = Name1 & {\n  age: number;\n};\nconst p2: Person1 = { name: '1', age: 19 };\n\ninterface Student {\n  name: string;\n}\ninterface Student {\n  age: number;\n}\ninterface Student {\n  bithday: Date;\n}\nconst stu: Student = { age: 19, name: 'pp', bithday: new Date() };\n\n// type S = {\n//   name: string;\n// };\n// type S = {\n//   age: number;\n// };\nexport default function Index() {\n  return <div>type VS interface</div>;\n}\n","F:\\lzn\\study\\tslearn\\src\\imp\\moduleImp\\moduleImp.tsx",["164"],"import * as React from 'react';\nexport default function Index() {\n  return <div>{1}</div>;\n}\n","F:\\lzn\\study\\tslearn\\src\\imp\\advancedTypeImp\\advancedTypeImp.tsx",["165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183"],"import * as React from 'react';\n\nfunction isNumber(x: any): x is number {\n  return typeof x === 'number';\n}\nfunction isString(x: any): x is string {\n  return typeof x === 'string';\n}\nfunction padLeft(value: string, padding: string | number) {\n  // if (typeof padding === 'number') {\n  //   return Array(padding + 1).join(' ') + value;\n  // }\n  // if (typeof padding === 'string') {\n  //   return padding + value;\n  // }\n  if (isNumber(padding)) {\n    return Array(padding + 1).join(' ') + value;\n  }\n  if (isString(padding)) {\n    return padding + value;\n  }\n\n  throw new Error(`Expected string or number, got '${padding}'.`);\n}\npadLeft('hee', '');\n\ninterface Bird {\n  fly(): void;\n  layEggs(): void;\n}\ninterface Fish {\n  swim(): void;\n  layEggs(): void;\n}\n//declare function getSmallPet(): Fish | Bird;\nfunction getSmallPet(): Fish | Bird {\n  return {\n    fly() {\n      console.log(1);\n    },\n    swim() {\n      console.log(1);\n    },\n    layEggs() {\n      console.log(1);\n    },\n  };\n}\nlet pet = getSmallPet();\npet.layEggs();\n\nlet fishPet = pet as Fish;\nlet birdPet = pet as Bird;\nif (fishPet.swim) {\n  fishPet.swim();\n} else if (birdPet.fly) {\n  birdPet.fly();\n}\n\nfunction isFish(pet: Fish | Bird): pet is Fish {\n  return (pet as Fish).swim !== undefined;\n}\nif (isFish(pet)) {\n  pet.swim();\n} else {\n  pet.fly();\n}\n\nlet s: string | null = 'foo';\ns = null;\nfunction f(x: number, y?: number) {\n  return x + (y || 0);\n}\nf(1, 1);\n\nfunction fn(sn: string | null): string {\n  return sn || 'dd';\n}\nconsole.log(fn(null));\n\nfunction broken(name: string | null): string {\n  return name!.charAt(0);\n}\n\ntype Name = string;\ntype NameResolver = () => string;\ntype NameOrResolver = Name | NameResolver;\n\nfunction getName(n: NameOrResolver): Name {\n  if (typeof n === 'string') {\n    return n;\n  } else {\n    return n();\n  }\n}\nconst square = 'square';\ninterface Square {\n  kind: typeof square;\n  size: number;\n}\n\ninterface Rectangle {\n  kind: 'rectangle';\n  width: number;\n  height: number;\n}\ninterface Circle {\n  kind: 'circle';\n  radius: number;\n}\n\ntype Shape = Square | Rectangle | Circle;\nfunction area(s: Shape) {\n  switch (s.kind) {\n    case 'square':\n      return s.size * s.size;\n    case 'rectangle':\n      return s.height * s.width;\n    case 'circle':\n      return Math.PI * s.radius ** 2;\n  }\n}\n\nclass BasicCaculator {\n  value: number;\n  constructor(v: number) {\n    this.value = v;\n  }\n  currentValue(): number {\n    return this.value;\n  }\n  add(operand: number): this {\n    this.value += operand;\n    return this;\n  }\n  multiply(operand: number): this {\n    this.value *= operand;\n    return this;\n  }\n}\n\nlet v = new BasicCaculator(10).add(10).multiply(20).currentValue();\nconsole.log(v);\n\nfunction pluck<T, K extends keyof T>(o: T, names: K[]): T[K][] {\n  return names.map((n) => o[n]);\n}\ninterface IPerson {\n  name: string;\n  age: number;\n}\nlet person: IPerson = {\n  name: 'dd',\n  age: 20,\n};\nlet ss: (string | number)[] = pluck(person, ['name', 'age']);\nconsole.log(ss);\n\nlet personProp: keyof IPerson;\nconst tagRegMap = {\n  title: 'ti',\n  artist: 'ar',\n  album: 'al',\n  offset: 'offset',\n  by: 'by',\n};\nfunction getProperty<T, K extends keyof T>(o: T, name: K): T[K] {\n  return o[name];\n}\n\nconsole.log(getProperty(tagRegMap, 'album'));\n\ninterface Map<T> {\n  [key: string]: T;\n}\n\nlet keys: keyof Map<number>;\nlet values: Map<number>['dß'];\n\ntype Readonly<T> = {\n  readonly [P in keyof T]: T[P];\n};\n\ntype Partial<T> = {\n  [P in keyof T]?: T[P];\n};\ntype PersonReadonly = Readonly<IPerson>;\ntype PersonPartial = Partial<IPerson>;\nlet perReadonly = { name: 'dd', age: 12 } as PersonReadonly;\nlet perPartial = {} as PersonPartial;\n\ntype Keys = 'op1' | 'op2';\ntype Flags = { [K in Keys]: boolean };\n\ntype Record<K extends string, T> = {\n  [P in K]: T;\n};\ntype ThreeStringProps = Record<'prop1' | 'prop2' | 'prop3', number>;\n\nfunction makeActionCreator(type: string, ...argNames: any) {\n  return function (...args: any) {\n    let action = { type };\n    argNames.forEach((arg: any, index: number) => {\n      action[argNames[index]] = args[index];\n    });\n    return action;\n  };\n}\nexport default function Index() {\n  return <div>advancedType</div>;\n}\n",{"ruleId":"184","severity":1,"message":"185","line":3,"column":25,"nodeType":"186","messageId":"187","endLine":3,"endColumn":57},{"ruleId":"188","severity":1,"message":"189","line":2,"column":8,"nodeType":"190","messageId":"191","endLine":2,"endColumn":12},{"ruleId":"184","severity":1,"message":"185","line":14,"column":1,"nodeType":"192","messageId":"187","endLine":14,"endColumn":15},{"ruleId":"188","severity":1,"message":"193","line":28,"column":11,"nodeType":"190","messageId":"191","endLine":28,"endColumn":23},{"ruleId":"188","severity":1,"message":"194","line":39,"column":40,"nodeType":"190","messageId":"191","endLine":39,"endColumn":45},{"ruleId":"188","severity":1,"message":"195","line":44,"column":15,"nodeType":"190","messageId":"191","endLine":44,"endColumn":27},{"ruleId":"188","severity":1,"message":"196","line":44,"column":29,"nodeType":"190","messageId":"191","endLine":44,"endColumn":40},{"ruleId":"184","severity":1,"message":"185","line":51,"column":16,"nodeType":"192","messageId":"187","endLine":51,"endColumn":32},{"ruleId":"188","severity":1,"message":"197","line":2,"column":17,"nodeType":"190","messageId":"191","endLine":2,"endColumn":25},{"ruleId":"188","severity":1,"message":"198","line":17,"column":11,"nodeType":"190","messageId":"191","endLine":17,"endColumn":21},{"ruleId":"199","severity":1,"message":"200","line":18,"column":12,"nodeType":"201","messageId":"202","endLine":18,"endColumn":15,"suggestions":"203"},{"ruleId":"199","severity":1,"message":"200","line":18,"column":18,"nodeType":"201","messageId":"202","endLine":18,"endColumn":21,"suggestions":"204"},{"ruleId":"199","severity":1,"message":"200","line":20,"column":27,"nodeType":"201","messageId":"202","endLine":20,"endColumn":30,"suggestions":"205"},{"ruleId":"199","severity":1,"message":"200","line":20,"column":35,"nodeType":"201","messageId":"202","endLine":20,"endColumn":38,"suggestions":"206"},{"ruleId":"184","severity":1,"message":"185","line":28,"column":3,"nodeType":"207","messageId":"187","endLine":28,"endColumn":60},{"ruleId":"199","severity":1,"message":"200","line":30,"column":22,"nodeType":"201","messageId":"202","endLine":30,"endColumn":25,"suggestions":"208"},{"ruleId":"184","severity":1,"message":"185","line":46,"column":16,"nodeType":"192","messageId":"187","endLine":46,"endColumn":32},{"ruleId":"188","severity":1,"message":"209","line":11,"column":7,"nodeType":"190","messageId":"191","endLine":11,"endColumn":10},{"ruleId":"188","severity":1,"message":"210","line":60,"column":1,"nodeType":"190","messageId":"191","endLine":60,"endColumn":2},{"ruleId":"184","severity":1,"message":"185","line":64,"column":1,"nodeType":"192","messageId":"187","endLine":64,"endColumn":17},{"ruleId":"188","severity":1,"message":"211","line":11,"column":5,"nodeType":"190","messageId":"191","endLine":11,"endColumn":28},{"ruleId":"188","severity":1,"message":"212","line":18,"column":5,"nodeType":"190","messageId":"191","endLine":18,"endColumn":38},{"ruleId":"188","severity":1,"message":"213","line":29,"column":7,"nodeType":"190","messageId":"191","endLine":29,"endColumn":10},{"ruleId":"188","severity":1,"message":"214","line":48,"column":10,"nodeType":"190","messageId":"191","endLine":48,"endColumn":16},{"ruleId":"188","severity":1,"message":"215","line":61,"column":7,"nodeType":"190","messageId":"191","endLine":61,"endColumn":10},{"ruleId":"188","severity":1,"message":"216","line":68,"column":7,"nodeType":"190","messageId":"191","endLine":68,"endColumn":11},{"ruleId":"188","severity":1,"message":"217","line":75,"column":10,"nodeType":"190","messageId":"191","endLine":75,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":80,"column":16,"nodeType":"192","messageId":"187","endLine":80,"endColumn":32},{"ruleId":"188","severity":1,"message":"218","line":3,"column":5,"nodeType":"190","messageId":"191","endLine":3,"endColumn":44},{"ruleId":"188","severity":1,"message":"219","line":7,"column":5,"nodeType":"190","messageId":"191","endLine":7,"endColumn":45},{"ruleId":"188","severity":1,"message":"220","line":10,"column":10,"nodeType":"190","messageId":"191","endLine":10,"endColumn":16},{"ruleId":"188","severity":1,"message":"221","line":14,"column":10,"nodeType":"190","messageId":"191","endLine":14,"endColumn":19},{"ruleId":"188","severity":1,"message":"222","line":14,"column":20,"nodeType":"190","messageId":"191","endLine":14,"endColumn":29},{"ruleId":"188","severity":1,"message":"223","line":14,"column":38,"nodeType":"190","messageId":"191","endLine":14,"endColumn":54},{"ruleId":"188","severity":1,"message":"224","line":17,"column":10,"nodeType":"190","messageId":"191","endLine":17,"endColumn":20},{"ruleId":"188","severity":1,"message":"225","line":17,"column":21,"nodeType":"190","messageId":"191","endLine":17,"endColumn":30},{"ruleId":"188","severity":1,"message":"226","line":17,"column":32,"nodeType":"190","messageId":"191","endLine":17,"endColumn":42},{"ruleId":"188","severity":1,"message":"227","line":21,"column":21,"nodeType":"190","messageId":"191","endLine":21,"endColumn":34},{"ruleId":"188","severity":1,"message":"228","line":21,"column":39,"nodeType":"190","messageId":"191","endLine":21,"endColumn":49},{"ruleId":"188","severity":1,"message":"229","line":50,"column":5,"nodeType":"190","messageId":"191","endLine":50,"endColumn":6},{"ruleId":"184","severity":1,"message":"185","line":52,"column":16,"nodeType":"192","messageId":"187","endLine":52,"endColumn":32},{"ruleId":"188","severity":1,"message":"230","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":14},{"ruleId":"188","severity":1,"message":"231","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":15},{"ruleId":"188","severity":1,"message":"232","line":72,"column":40,"nodeType":"190","messageId":"191","endLine":72,"endColumn":45},{"ruleId":"199","severity":1,"message":"200","line":82,"column":19,"nodeType":"201","messageId":"202","endLine":82,"endColumn":22,"suggestions":"233"},{"ruleId":"184","severity":1,"message":"185","line":96,"column":3,"nodeType":"207","messageId":"187","endLine":96,"endColumn":10},{"ruleId":"184","severity":1,"message":"185","line":101,"column":3,"nodeType":"207","messageId":"187","endLine":101,"endColumn":35},{"ruleId":"184","severity":1,"message":"185","line":119,"column":3,"nodeType":"207","messageId":"187","endLine":119,"endColumn":29},{"ruleId":"184","severity":1,"message":"185","line":129,"column":3,"nodeType":"207","messageId":"187","endLine":129,"endColumn":9},{"ruleId":"184","severity":1,"message":"185","line":135,"column":3,"nodeType":"207","messageId":"187","endLine":135,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":204,"column":3,"nodeType":"207","messageId":"187","endLine":204,"endColumn":29},{"ruleId":"188","severity":1,"message":"229","line":13,"column":1,"nodeType":"190","messageId":"191","endLine":13,"endColumn":2},{"ruleId":"188","severity":1,"message":"234","line":16,"column":1,"nodeType":"190","messageId":"191","endLine":16,"endColumn":3},{"ruleId":"184","severity":1,"message":"185","line":22,"column":16,"nodeType":"192","messageId":"187","endLine":22,"endColumn":32},{"ruleId":"188","severity":1,"message":"235","line":3,"column":11,"nodeType":"190","messageId":"191","endLine":3,"endColumn":15},{"ruleId":"188","severity":1,"message":"236","line":8,"column":11,"nodeType":"190","messageId":"191","endLine":8,"endColumn":18},{"ruleId":"188","severity":1,"message":"237","line":12,"column":6,"nodeType":"190","messageId":"191","endLine":12,"endColumn":11},{"ruleId":"188","severity":1,"message":"238","line":16,"column":6,"nodeType":"190","messageId":"191","endLine":16,"endColumn":14},{"ruleId":"188","severity":1,"message":"239","line":24,"column":7,"nodeType":"190","messageId":"191","endLine":24,"endColumn":18},{"ruleId":"188","severity":1,"message":"240","line":33,"column":7,"nodeType":"190","messageId":"191","endLine":33,"endColumn":18},{"ruleId":"188","severity":1,"message":"241","line":44,"column":7,"nodeType":"190","messageId":"191","endLine":44,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":52,"column":16,"nodeType":"192","messageId":"187","endLine":52,"endColumn":32},{"ruleId":"184","severity":1,"message":"185","line":2,"column":16,"nodeType":"192","messageId":"187","endLine":2,"endColumn":32},{"ruleId":"199","severity":1,"message":"200","line":3,"column":22,"nodeType":"201","messageId":"202","endLine":3,"endColumn":25,"suggestions":"242"},{"ruleId":"199","severity":1,"message":"200","line":6,"column":22,"nodeType":"201","messageId":"202","endLine":6,"endColumn":25,"suggestions":"243"},{"ruleId":"188","severity":1,"message":"244","line":70,"column":1,"nodeType":"190","messageId":"191","endLine":70,"endColumn":2},{"ruleId":"188","severity":1,"message":"245","line":81,"column":10,"nodeType":"190","messageId":"191","endLine":81,"endColumn":16},{"ruleId":"246","severity":1,"message":"247","line":82,"column":10,"nodeType":"248","messageId":"249","endLine":82,"endColumn":15,"suggestions":"250"},{"ruleId":"188","severity":1,"message":"251","line":89,"column":10,"nodeType":"190","messageId":"191","endLine":89,"endColumn":17},{"ruleId":"188","severity":1,"message":"252","line":113,"column":10,"nodeType":"190","messageId":"191","endLine":113,"endColumn":14},{"ruleId":"188","severity":1,"message":"253","line":159,"column":5,"nodeType":"190","messageId":"191","endLine":159,"endColumn":30},{"ruleId":"188","severity":1,"message":"254","line":177,"column":5,"nodeType":"190","messageId":"191","endLine":177,"endColumn":28},{"ruleId":"188","severity":1,"message":"255","line":178,"column":5,"nodeType":"190","messageId":"191","endLine":178,"endColumn":30},{"ruleId":"188","severity":1,"message":"256","line":189,"column":5,"nodeType":"190","messageId":"191","endLine":189,"endColumn":16},{"ruleId":"188","severity":1,"message":"257","line":190,"column":5,"nodeType":"190","messageId":"191","endLine":190,"endColumn":15},{"ruleId":"188","severity":1,"message":"258","line":193,"column":6,"nodeType":"190","messageId":"191","endLine":193,"endColumn":11},{"ruleId":"188","severity":1,"message":"259","line":198,"column":6,"nodeType":"190","messageId":"191","endLine":198,"endColumn":22},{"ruleId":"188","severity":1,"message":"260","line":200,"column":10,"nodeType":"190","messageId":"191","endLine":200,"endColumn":27},{"ruleId":"199","severity":1,"message":"200","line":200,"column":55,"nodeType":"201","messageId":"202","endLine":200,"endColumn":58,"suggestions":"261"},{"ruleId":"199","severity":1,"message":"200","line":201,"column":29,"nodeType":"201","messageId":"202","endLine":201,"endColumn":32,"suggestions":"262"},{"ruleId":"199","severity":1,"message":"200","line":203,"column":28,"nodeType":"201","messageId":"202","endLine":203,"endColumn":31,"suggestions":"263"},{"ruleId":"184","severity":1,"message":"185","line":209,"column":16,"nodeType":"192","messageId":"187","endLine":209,"endColumn":32},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","FunctionDeclaration","'StringArray1' is defined but never used.","'Clock' is defined but never used.","'hour' is defined but never used.","'min' is defined but never used.","'IHandler' is defined but never used.","'IDeHandler' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["264","265"],["266","267"],["268","269"],["270","271"],"FunctionExpression",["272","273"],"'oct' is assigned a value but never used.","'c' is assigned a value but never used.","'myIdentity' is assigned a value but never used.","'myIdentity2' is assigned a value but never used.","'gen' is assigned a value but never used.","'create' is defined but never used.","'Bee' is defined but never used.","'Lion' is defined but never used.","'createIntance' is defined but never used.","'myAdd' is assigned a value but never used.","'myAdd1' is assigned a value but never used.","'myAdd2' is defined but never used.","'buildName' is defined but never used.","'fitstname' is assigned a value but never used.","'lastname' is defined but never used.","'buildName1' is defined but never used.","'l' is defined but never used.","'f' is defined but never used.","'first' is defined but never used.","'restOfName' is defined but never used.","'p' is assigned a value but never used.","'type' is defined but never used.","'title' is defined but never used.","'Lyric' is defined but never used.",["274","275"],"'p1' is assigned a value but never used.","'User' is defined but never used.","'SetUser' is defined but never used.","'User1' is defined but never used.","'SetUser1' is defined but never used.","'per' is assigned a value but never used.","'p2' is assigned a value but never used.","'stu' is assigned a value but never used.",["276","277"],["278","279"],"'s' is assigned a value but never used.","'broken' is defined but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["280"],"'getName' is defined but never used.","'area' is defined but never used.","'personProp' is defined but never used.","'keys' is defined but never used.","'values' is defined but never used.","'perReadonly' is assigned a value but never used.","'perPartial' is assigned a value but never used.","'Flags' is defined but never used.","'ThreeStringProps' is defined but never used.","'makeActionCreator' is defined but never used.",["281","282"],["283","284"],["285","286"],{"messageId":"287","fix":"288","desc":"289"},{"messageId":"290","fix":"291","desc":"292"},{"messageId":"287","fix":"293","desc":"289"},{"messageId":"290","fix":"294","desc":"292"},{"messageId":"287","fix":"295","desc":"289"},{"messageId":"290","fix":"296","desc":"292"},{"messageId":"287","fix":"297","desc":"289"},{"messageId":"290","fix":"298","desc":"292"},{"messageId":"287","fix":"299","desc":"289"},{"messageId":"290","fix":"300","desc":"292"},{"messageId":"287","fix":"301","desc":"289"},{"messageId":"290","fix":"302","desc":"292"},{"messageId":"287","fix":"303","desc":"289"},{"messageId":"290","fix":"304","desc":"292"},{"messageId":"287","fix":"305","desc":"289"},{"messageId":"290","fix":"306","desc":"292"},{"messageId":"307","fix":"308","desc":"309"},{"messageId":"287","fix":"310","desc":"289"},{"messageId":"290","fix":"311","desc":"292"},{"messageId":"287","fix":"312","desc":"289"},{"messageId":"290","fix":"313","desc":"292"},{"messageId":"287","fix":"314","desc":"289"},{"messageId":"290","fix":"315","desc":"292"},"suggestUnknown",{"range":"316","text":"317"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"316","text":"318"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"319","text":"317"},{"range":"319","text":"318"},{"range":"320","text":"317"},{"range":"320","text":"318"},{"range":"321","text":"317"},{"range":"321","text":"318"},{"range":"322","text":"317"},{"range":"322","text":"318"},{"range":"323","text":"317"},{"range":"323","text":"318"},{"range":"324","text":"317"},{"range":"324","text":"318"},{"range":"325","text":"317"},{"range":"325","text":"318"},"suggestOptionalChain",{"range":"326","text":"327"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"328","text":"317"},{"range":"328","text":"318"},{"range":"329","text":"317"},{"range":"329","text":"318"},{"range":"330","text":"317"},{"range":"330","text":"318"},[1223,1226],"unknown","never",[1229,1232],[1262,1265],[1270,1273],[1539,1542],[1587,1590],[54,57],[129,132],[1578,1579],"?",[3876,3879],[3911,3914],[3972,3975]]